{
    "name": "forme/base",
    "type": "project",
    "license": "MIT",
    "description": "Forme base server setup",
    "homepage": "https://formewp.github.io",
    "authors": [
        {
            "name": "Moussa Clarke",
            "email": "moussaclarke@gmail.com",
            "homepage": "https://github.com/moussaclarke"
        }
    ],
    "keywords": [
        "composer",
        "wordpress",
        "wp"
    ],
    "repositories": [
        {
            "type": "composer",
            "url": "https://wpackagist.org",
            "only": [
                "wpackagist-plugin/*",
                "wpackagist-theme/*"
            ]
        }
    ],
    "require": {
        "php": ">=8.1",
        "composer/installers": "^2.2",
        "wikimedia/composer-merge-plugin": "^2.0",
        "wpackagist-plugin/advanced-custom-fields": "^6.0"
    },
    "require-dev": {
        "squizlabs/php_codesniffer": "^3.7",
        "roave/security-advisories": "dev-master",
        "symfony/var-dumper": "^6.0",
        "wpackagist-plugin/debug-bar": "^1.0",
        "filp/whoops": "^2.9"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "extra": {
        "installer-paths": {
            "pubic/wp-content/mu-plugins/{$name}/": [
                "type:wordpress-muplugin"
            ],
            "public/wp-content/plugins/{$name}/": [
                "type:wordpress-plugin"
            ],
            "public/wp-content/themes/{$name}/": [
                "type:wordpress-theme"
            ]
        },
        "wordpress-install-dir": "public",
        "merge-plugin": {
            "include": [
                "public/wp-content/plugins/*-plugin/composer.json",
                "public/wp-content/themes/*-theme/composer.json"
            ],
            "recurse": true,
            "replace": false,
            "merge-dev": false
        }
    },
    "scripts": {
        "post-root-package-install": [
            "@setup-wordpress"
        ],
        "install-wordpress": "#!/bin/bash\nWGET_EXISTS='command -v wget'\nCURL_EXISTS='command -v curl'\nWPCLI_EXISTS='command -v wp'\nif ! $WGET_EXISTS &> /dev/null && ! $CURL_EXISTS &> /dev/null && ! $WPCLI_EXISTS &> /dev/null\nthen\necho \"You need to install wp-cli, wget or curl to use the install script\"\nexit 0\nfi\nif $WPCLI_EXISTS &> /dev/null\nthen\nwp core download --path=public\nexit 0\nfi\necho \"Downloading latest version of WordPress from github\"\n# check if wget\nif $WGET_EXISTS &> /dev/null\nthen\nwget -q --no-check-certificate --content-disposition https://github.com/johnpbloch/wordpress-core/archive/refs/heads/master.zip\nfi\n# check if not wget but curl\nif ! $WGET_EXISTS &> /dev/null && $CURL_EXISTS &> /dev/null\nthen\ncurl -sLJO https://github.com/johnpbloch/wordpress-core/archive/refs/heads/master.zip\nfi\necho \"Installing WordPress into public directory\"\n# unzip that thing\nunzip -q -d \"public\" \"wordpress-core-master.zip\" && f=(\"public\"/*) && mv \"public\"/*/* \"public\" && rmdir \"${f[@]}\"\n# remove the file\necho \"Tidying up\"\nrm wordpress-core-master.zip\necho \"Success: WordPress Downloaded.\"\n",
        "configure-wordpress": "#!/bin/bash\nWPCLI_EXISTS='command -v wp'\nif ! $WPCLI_EXISTS &> /dev/null\nthen\necho \"You need to install wp-cli globally to run the configuration script\"\nexit 0\nfi\nwp config create --prompt=dbname,dbuser,dbpass --skip-check --path=public\nwp config set WP_ENV development --path=public\npwd=`pwd`\nwp config set FORME_PRIVATE_ROOT $(pwd)\"/\" --path=public\necho \"Check public/wp-config.php to make sure all correct\"\n",
        "require-autoload": "#!/bin/bash\nfile=\"public/wp-config.php\"\npwd=`pwd`\n# if  sed --version succceds then this is probably a linux system\nif sed --version >/dev/null 2>&1; then\nsed -i '/\\/\\* That'\\''s all, stop editing\\! Happy publishing\\. \\*\\//a\\\n\\\nrequire_once FORME_PRIVATE_ROOT.'\"'\"'/vendor/autoload.php'\"'\"';\\\n' $file\n# otherwise this is probably a mac, we need to add '' because of ancient sed\nelse\nsed -i '' '/\\/\\* That'\\''s all, stop editing\\! Happy publishing\\. \\*\\//a\\\n\\\nrequire_once FORME_PRIVATE_ROOT.'\"'\"'/vendor/autoload.php'\"'\"';\\\n' $file\nfi\necho \"Success: Require autoload\"\n",
        "init-dot-env": "touch .env && echo \"# Plugin/theme related env vars can go in here. You should copy everything back to .env.example without secrets in order to maintain your default configuration\" >> .env\n",
        "setup-wordpress": [
            "@install-wordpress",
            "@configure-wordpress",
            "@require-autoload",
            "@init-dot-env"
        ],
        "post-update-cmd": [
            "npm i --omit=dev && npm run build -ws"
        ],
        "post-install-cmd": [
            "npm i --omit=dev && npm run build -ws"
        ]
    }
}
